/*
 * This file was generated by the Gradle 'init' task.
 */
plugins {
  id "com.github.johnrengelman.shadow"
  id "com.jfrog.bintray"
  id "edu.sc.seis.launch4j"
}
apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'application'

dependencies {
  implementation 'com.salesforce.servicelibs:jprotoc:0.9.0'
  testImplementation 'junit:junit:4.12'
}
sourceCompatibility = '1.8'
mainClassName = "io.skerna.protobuff.protoc.kotlingen.VertxGenerator"

shadowJar {
  mergeServiceFiles()
  zip64 true
  classifier = "jdk8"
  archiveClassifier.set("jdk8")
  manifest {
    attributes(
      'Main-Class': mainClassName,
      'version': project.version,
    )
  }
}

description = 'grpc-kotlin-gen'

jar {
  manifest {
    attributes 'Main-Class': mainClassName
  }
}


task createExecLinux(dependsOn: installShadowDist) {
  final outputFile = file("${buildDir}/install/${project.name}-shadow/bin/${project.name}-${project.version}.exe")

  doLast {
    outputFile.text = '#!/bin/bash\n'
    outputFile.append('exec java -jar "$0" "$@"')
    outputFile.append(inputs.files.first().readBytes())
    outputFile.setExecutable(true)
  }

  inputs.files "${tasks.findByName('installShadowDist').outputs.getFiles().getSingleFile()}/lib/${project.name}-${project.version}-jdk8.jar"
  outputs.file outputFile
  doFirst {
    mkdir outputFile.getParent()
  }
}

task createExecWindows(dependsOn: installShadowDist) {
  final outputFile = file("${buildDir}/install/${project.name}-shadow/bin/${project.name}-${project.version}.cmd")

  doLast {
    outputFile.text = '@ECHO OFF\r\n'
    outputFile.append('set CMD_LINE_ARGS=%*\n')
    outputFile.append('java -jar %~dpnx0 %*\n')
    outputFile.append('exit /b\r\n')
    outputFile.append(inputs.files.first().readBytes())
    outputFile.setExecutable(true)
  }

  inputs.files "${tasks.findByName('installShadowDist').outputs.getFiles().getSingleFile()}/lib/${project.name}-${project.version}-jdk8.jar"
  outputs.file outputFile
  doFirst {
    mkdir outputFile.getParent()
  }
}
// wire the dependencies createJarExe
tasks.whenTaskAdded { task ->
  if (task.name == 'publishNebulaIvyPublicationToDistIvyRepository') {
    task.dependsOn('createExecLinux')
    task.dependsOn('createExecWindows')
  }
}

publishToMavenLocal.dependsOn createExecLinux
publishToMavenLocal.dependsOn createExecWindows

artifacts {
  archives shadowJar
}


publishing {
  publications {
    pluginMaven(MavenPublication) {
      from(components.java)
      artifact shadowJar
      artifact(tasks.findByName('createExecLinux').outputs.getFiles().getSingleFile()) {
        classifier 'jdk8-linux'
      }
      artifact(tasks.findByName('createExecWindows').outputs.getFiles().getSingleFile()) {
        classifier 'jdk8-windows'
      }
    }
  }
}


apply from: project.rootProject.file("gradle/publish.gradle")
