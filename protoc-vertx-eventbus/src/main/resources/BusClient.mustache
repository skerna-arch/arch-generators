{{#packageName}}
package {{packageName}}
{{/packageName}}

import io.vertx.core.Vertx
import io.vertx.core.eventbus.DeliveryOptions
import io.vertx.core.eventbus.EventBus
import kotlin.coroutines.CoroutineContext
import kotlin.coroutines.*
import kotlinx.coroutines.*
import kotlinx.coroutines.channels.*
import io.skerna.arch.protoservices.requestSuspend
import io.vertx.core.eventbus.Message

{{#javaDoc}}{{{javaDoc}}}{{/javaDoc}}
{{#deprecated}}@Deprecated("deprecated"){{/deprecated}}
@javax.annotation.Generated(
        value = ["by gRPC Kotlin generator"],
        comments = "Source: {{protoName}}"
)
interface {{serviceName}}BusCli{
    {{#methods}}
    {{#javaDoc}}{{{javaDoc}}}{{/javaDoc}}
    {{#deprecated}}@Deprecated("deprecated"){{/deprecated}}
    {{^isManyInput}}
    {{^isManyOutput}}
    {{! == unary req, unary resp == }}
    suspend fun {{methodName}}(request: {{inputType}}, options:DeliveryOptions?=null):Message<{{outputType}}>
    {{/isManyOutput}}
    {{/isManyInput}}
    {{/methods}}

    companion object{
        fun create(vertx:Vertx,coroutineContext:CoroutineContext=Dispatchers.Default):{{serviceName}}BusCli{
            return {{serviceName}}BusCliImpl(vertx,coroutineContext)
        }
    }
}
