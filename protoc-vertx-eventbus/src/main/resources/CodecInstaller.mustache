{{#packageName}}
package {{packageName}}
{{/packageName}}

import io.skerna.arch.protoservices.*
import kotlin.coroutines.*
import kotlinx.coroutines.*
import kotlinx.coroutines.channels.*
import io.vertx.core.Vertx
import io.vertx.core.buffer.Buffer
import io.vertx.core.eventbus.MessageCodec as EventbusMessageCodec
import io.vertx.core.eventbus.EventBus

{{#javaDoc}}{{{javaDoc}}}{{/javaDoc}}
{{#deprecated}}@Deprecated("deprecated"){{/deprecated}}
object {{serviceName}}CodecInstaller {

    fun installCodecs(vertx: Vertx){
        val eventBus = vertx.eventBus()
        installCodecs(eventBus)
    }

    fun uninstallCodecs(vertx: Vertx){
        val eventBus = vertx.eventBus()
        uninstallCodecs(eventBus)
    }

    fun installCodecs(eventBus: EventBus){
    {{#messages}}
        try{
            eventBus.registerDefaultCodec({{name}}::class.java,{{name}}Codec)
        }catch (ex:Exception){
         //   System.err.println("Codecs already installed " + ex.message)
        }
    {{/messages}}
    }
    fun uninstallCodecs(eventBus: EventBus){
    {{#messages}}
        try{
            eventBus.unregisterDefaultCodec({{name}}::class.java)
        }catch (ex:Exception){
       // System.err.println("Codecs imposible uninstall" + ex.message)
        }
    {{/messages}}
    }

}
